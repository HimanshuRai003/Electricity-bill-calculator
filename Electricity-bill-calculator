class Customer:
    def __init__(self):
        self.name = ""
        self.units = 0

    def get_details(self):
        while True:         # Input validation loop for name
            self.name = input("Customer Name: ")
            if self.name:   # Check if name is not empty
                break
            else:
                print("Name cannot be empty. Please enter a valid name.")

        while True:         # Input validation loop for units
            try:
                self.units = int(input("Units consumed: "))
                if self.units >= 0:  # Check for non-negative units
                    break
                else:
                    print("Units consumed cannot be negative. Please enter a valid number.")
            except ValueError:
                print("Invalid input. Please enter a valid integer.")

    def calculate_charge(self):
        if self.units < 80:
            return 50.0
        elif self.units <= 100:
            return (self.units * 60) / 100
        elif self.units <= 200:
            return (self.units * 80) / 100
        else:
            x = (self.units * 90) / 100
            return (x / 100) * 115


def main():
    while True:  # Input validation loop for number of customers
        try:
            num_customers = int(input("Enter the number of customers: "))
            if num_customers > 0:
                break
            else:
                print("Number of customers must be greater than 0. Please enter a valid number.")
        except ValueError:
            print("Invalid input. Please enter a valid integer.")

    customers = []
    for _ in range(num_customers):
        customer = Customer()
        customer.get_details()
        customers.append(customer)

    for customer in customers:
        charge = customer.calculate_charge()
        print(f"{customer.name}\nCharge = Rs{charge:.2f}")  # Format charge to two decimal places


if __name__ == "__main__":
    main()
